"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TOGGLE_SINGLE_MODULAR_PIPELINE_EXPANDED = exports.TOGGLE_MODULAR_PIPELINE_DISABLED = exports.TOGGLE_MODULAR_PIPELINE_ACTIVE = exports.TOGGLE_MODULAR_PIPELINES_EXPANDED = void 0;
exports.toggleModularPipelineActive = toggleModularPipelineActive;
exports.toggleModularPipelineDisabled = toggleModularPipelineDisabled;
exports.toggleModularPipelinesExpanded = toggleModularPipelinesExpanded;
exports.toggleSingleModularPipelineExpanded = toggleSingleModularPipelineExpanded;
const TOGGLE_MODULAR_PIPELINE_ACTIVE = exports.TOGGLE_MODULAR_PIPELINE_ACTIVE = 'TOGGLE_MODULAR_PIPELINE_ACTIVE';

/**
 * Toggle a modular pipeline item's highlighting on/off (or array of modular pipelines)
 * @param {String|Array} modularPipelineIDs Modular pipeline id(s)
 * @param {Boolean} active True if modular pipeline(s) active
 */
function toggleModularPipelineActive(modularPipelineIDs, active) {
  return {
    type: TOGGLE_MODULAR_PIPELINE_ACTIVE,
    modularPipelineIDs: Array.isArray(modularPipelineIDs) ? modularPipelineIDs : [modularPipelineIDs],
    active
  };
}
const TOGGLE_MODULAR_PIPELINE_DISABLED = exports.TOGGLE_MODULAR_PIPELINE_DISABLED = 'TOGGLE_MODULAR_PIPELINE_DISABLED';
function toggleModularPipelineDisabled(modularPipelineIDs, disabled) {
  return {
    type: TOGGLE_MODULAR_PIPELINE_DISABLED,
    modularPipelineIDs: Array.isArray(modularPipelineIDs) ? modularPipelineIDs : [modularPipelineIDs],
    disabled
  };
}
const TOGGLE_SINGLE_MODULAR_PIPELINE_EXPANDED = exports.TOGGLE_SINGLE_MODULAR_PIPELINE_EXPANDED = 'TOGGLE_SINGLE_MODULAR_PIPELINE_EXPANDED';

/**
 * Toggle a singular modular pipeline to be expanded.
 * @param {String} modularPipelineID
 */
function toggleSingleModularPipelineExpanded(modularPipelineID) {
  return {
    type: TOGGLE_SINGLE_MODULAR_PIPELINE_EXPANDED,
    modularPipelineID
  };
}
const TOGGLE_MODULAR_PIPELINES_EXPANDED = exports.TOGGLE_MODULAR_PIPELINES_EXPANDED = 'TOGGLE_MODULAR_PIPELINES_EXPANDED';

/**
 * Toggle a set of modular pipelines to be expanded.
 * @param {Array[Number]} expandedIDs
 */
function toggleModularPipelinesExpanded(expandedIDs) {
  return {
    type: TOGGLE_MODULAR_PIPELINES_EXPANDED,
    expandedIDs
  };
}