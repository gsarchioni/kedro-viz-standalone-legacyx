"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _classnames = _interopRequireDefault(require("classnames"));
var _close = _interopRequireDefault(require("../../icons/close"));
var _search = _interopRequireDefault(require("../../icons/search"));
var _searchInput = _interopRequireDefault(require("./search-input"));
/**
 * SearchBarRenderer, used to output the actual DOM markup for the component
 */
const SearchBarRenderer = props => {
  const {
    children,
    isFocused,
    placeholder,
    onBlur,
    onChange,
    onClear,
    onFocus,
    onSubmit,
    theme,
    showClearButton,
    value
  } = props;
  return /*#__PURE__*/_react.default.createElement("form", {
    className: (0, _classnames.default)('kedro', 'search-bar', "kui-theme--".concat(theme), {
      'search-bar--focused': isFocused
    }),
    onSubmit: onSubmit,
    role: children ? 'combobox' : 'search'
  }, /*#__PURE__*/_react.default.createElement("label", {
    className: "search-bar__label",
    htmlFor: "search-bar"
  }, "Search"), /*#__PURE__*/_react.default.createElement("div", {
    className: "search-bar__icon-wrapper"
  }, /*#__PURE__*/_react.default.createElement(_search.default, {
    className: "icon icon__graphics"
  })), /*#__PURE__*/_react.default.createElement(_searchInput.default, {
    id: "search-bar",
    placeholder: placeholder,
    onChange: onChange,
    onFocus: onFocus,
    onBlur: onBlur,
    value: value,
    theme: theme,
    type: "search"
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('search-bar__dynamic-icon', {
      'search-bar__dynamic-icon--visible': showClearButton
    })
  }, /*#__PURE__*/_react.default.createElement("button", {
    className: "icon--close",
    onBlur: onBlur,
    onClick: onClear,
    onFocus: onFocus
  }, /*#__PURE__*/_react.default.createElement(_close.default, {
    className: "icon icon__graphics"
  }))), children);
};
SearchBarRenderer.propTypes = {
  /**
   * Child component, usually search-bar-results
   */
  children: _propTypes.default.node,
  /**
   * Indicating whether the search bar is focused or blurred
   */
  isFocused: _propTypes.default.bool.isRequired,
  /**
   * Place holder text for search input
   */
  placeholder: _propTypes.default.string.isRequired,
  /**
   * On blur method, triggered by clicking outside the input
   */
  onBlur: _propTypes.default.func.isRequired,
  /**
   * On change method called after wait time has passed
   */
  onChange: _propTypes.default.func.isRequired,
  /**
   * On close method, triggered by icon click
   */
  onClear: _propTypes.default.func.isRequired,
  /**
   * On focus method, triggered by clicking into the input
   */
  onFocus: _propTypes.default.func.isRequired,
  /**
   * On submit method, triggered by hitting enter on the input
   */
  onSubmit: _propTypes.default.func,
  /**
   * Theme of the component
   */
  theme: _propTypes.default.oneOf(['light', 'dark']).isRequired,
  /**
   * Show clear button on right
   */
  showClearButton: _propTypes.default.bool.isRequired,
  /**
   * Text value for the input
   */
  value: _propTypes.default.string.isRequired
};
var _default = exports.default = SearchBarRenderer;