"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const MIN_HEIGHT = 20;
const Input = _ref => {
  let {
    characterLimit = false,
    defaultValue = '',
    onChange,
    placeholder,
    resetValueTrigger,
    size = 'large',
    dataTest,
    type
  } = _ref;
  const isLimitSet = characterLimit > 0;
  const ref = (0, _react.useRef)(null);
  const [value, setValue] = (0, _react.useState)(defaultValue);
  (0, _react.useEffect)(() => {
    setValue(defaultValue);
  }, [defaultValue]);
  (0, _react.useEffect)(() => {
    setValue(defaultValue);
  }, [defaultValue, resetValueTrigger]);
  (0, _react.useLayoutEffect)(() => {
    ref.current.style.height = 'inherit';
    ref.current.style.height = "".concat(Math.max(ref.current.scrollHeight, MIN_HEIGHT), "px");
  }, [value]);
  const handleChange = e => {
    const value = e.target.value;
    if (isLimitSet) {
      setValue(value.slice(0, characterLimit));
      onChange && onChange(value.slice(0, characterLimit));
    } else {
      setValue(value.slice(0));
      onChange && onChange(value.slice(0));
    }
  };
  const inputElement = type === 'textarea' ? /*#__PURE__*/_react.default.createElement("textarea", {
    className: "input input--".concat(size),
    onChange: handleChange,
    placeholder: placeholder,
    ref: ref,
    rows: 1,
    value: value,
    "data-test": dataTest
  }) : /*#__PURE__*/_react.default.createElement("input", {
    type: type,
    className: "input input--".concat(size),
    onChange: handleChange,
    placeholder: placeholder,
    ref: ref,
    value: value,
    "data-test": dataTest
  });
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, inputElement, isLimitSet ? /*#__PURE__*/_react.default.createElement("div", {
    className: "input-character-count"
  }, /*#__PURE__*/_react.default.createElement("span", null, /*#__PURE__*/_react.default.createElement("span", {
    className: "input-number-characters"
  }, value.length), "/", characterLimit, " characters")) : null);
};
var _default = exports.default = Input;