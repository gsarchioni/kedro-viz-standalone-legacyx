"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _iconButton = _interopRequireDefault(require("../../ui/icon-button"));
var _tooltip = _interopRequireDefault(require("../tooltip"));
var _copy = _interopRequireDefault(require("../../icons/copy"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const CommandCopier = _ref => {
  let {
    command,
    classNames,
    isCommand,
    dataTest
  } = _ref;
  const [showCopied, setShowCopied] = (0, _react.useState)(false);
  const onCopyClick = () => {
    window.navigator.clipboard.writeText(command);
    setShowCopied(true);
    setTimeout(() => setShowCopied(false), 1500);
  };
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "container"
  }, /*#__PURE__*/_react.default.createElement("code", {
    className: (0, _classnames.default)('command-value', classNames)
  }, command), window.navigator.clipboard && isCommand && /*#__PURE__*/_react.default.createElement("ul", {
    className: "toolbox"
  }, /*#__PURE__*/_react.default.createElement(_iconButton.default, {
    ariaLabel: "Copy run command to clipboard.",
    className: "copy-button",
    dataTest: dataTest,
    icon: _copy.default,
    onClick: onCopyClick
  }), /*#__PURE__*/_react.default.createElement(_tooltip.default, {
    text: "Copied!",
    visible: showCopied,
    noDelay: true,
    centerArrow: true,
    arrowSize: "small"
  })));
};
var _default = exports.default = CommandCopier;