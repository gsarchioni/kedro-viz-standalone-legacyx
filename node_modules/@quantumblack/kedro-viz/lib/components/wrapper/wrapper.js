"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapStateToProps = exports.default = exports.Wrapper = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactRedux = require("react-redux");
var _reactRouterDom = require("react-router-dom");
var _classnames = _interopRequireDefault(require("classnames"));
var _utils = require("../../utils");
var _utils2 = require("../../apollo/utils");
var _config = require("../../apollo/config");
var _provider = require("../provider/provider");
var _queries = require("../../apollo/queries");
var _featureHints = _interopRequireDefault(require("../feature-hints"));
var _globalToolbar = _interopRequireDefault(require("../global-toolbar"));
var _flowchartWrapper = _interopRequireDefault(require("../flowchart-wrapper"));
var _experimentWrapper = _interopRequireDefault(require("../experiment-wrapper"));
var _settingsModal = _interopRequireDefault(require("../settings-modal"));
var _updateReminder = _interopRequireDefault(require("../update-reminder"));
var _shareableUrlModal = _interopRequireDefault(require("../shareable-url-modal"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * Main app container. Handles showing/hiding the sidebar nav, and theme classes.
 */
const Wrapper = _ref => {
  let {
    displayGlobalNavigation,
    theme
  } = _ref;
  const {
    data: versionData
  } = (0, _utils2.useApolloQuery)(_queries.GET_VERSIONS, {
    client: _config.client,
    skip: !displayGlobalNavigation || !(0, _utils.isRunningLocally)()
  });
  const [isOutdated, setIsOutdated] = (0, _react.useState)(false);
  const [latestVersion, setLatestVersion] = (0, _react.useState)(null);
  (0, _react.useEffect)(() => {
    if (versionData) {
      setIsOutdated(versionData.version.isOutdated);
      setLatestVersion(versionData.version.latest);
    }
  }, [versionData]);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('kedro-pipeline kedro', {
      'kui-theme--dark': theme === 'dark',
      'kui-theme--light': theme === 'light'
    })
  }, /*#__PURE__*/_react.default.createElement("h1", {
    className: "pipeline-title"
  }, "Kedro-Viz"), /*#__PURE__*/_react.default.createElement(_reactRouterDom.BrowserRouter, null, displayGlobalNavigation ? /*#__PURE__*/_react.default.createElement(_provider.GraphQLProvider, null, /*#__PURE__*/_react.default.createElement(_globalToolbar.default, {
    isOutdated: isOutdated
  }), /*#__PURE__*/_react.default.createElement(_settingsModal.default, {
    isOutdated: isOutdated,
    latestVersion: latestVersion
  }), (0, _utils.isRunningLocally)() ? /*#__PURE__*/_react.default.createElement(_shareableUrlModal.default, null) : null, versionData && /*#__PURE__*/_react.default.createElement(_updateReminder.default, {
    isOutdated: isOutdated,
    versions: versionData.version
  }), /*#__PURE__*/_react.default.createElement(_reactRouterDom.Switch, null, /*#__PURE__*/_react.default.createElement(_reactRouterDom.Route, {
    exact: true,
    path: (0, _utils.sanitizedPathname)()
  }, /*#__PURE__*/_react.default.createElement(_flowchartWrapper.default, null), /*#__PURE__*/_react.default.createElement(_featureHints.default, null)), /*#__PURE__*/_react.default.createElement(_reactRouterDom.Route, {
    path: "".concat((0, _utils.sanitizedPathname)(), "experiment-tracking")
  }, /*#__PURE__*/_react.default.createElement(_experimentWrapper.default, null)))) : /*#__PURE__*/_react.default.createElement(_flowchartWrapper.default, null)));
};
exports.Wrapper = Wrapper;
const mapStateToProps = state => ({
  displayGlobalNavigation: state.display.globalNavigation,
  theme: state.theme
});
exports.mapStateToProps = mapStateToProps;
var _default = exports.default = (0, _reactRedux.connect)(mapStateToProps)(Wrapper);