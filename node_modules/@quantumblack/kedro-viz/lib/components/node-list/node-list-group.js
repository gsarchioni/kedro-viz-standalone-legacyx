"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.NodeListGroup = void 0;
var _react = _interopRequireDefault(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _nodeListRow = _interopRequireDefault(require("./node-list-row"));
var _nodeListRowList = _interopRequireDefault(require("./node-list-row-list"));
const NodeListGroup = _ref => {
  let {
    allUnchecked,
    checked,
    collapsed,
    group,
    id,
    invisibleIcon,
    items,
    kind,
    name,
    onItemChange,
    onItemClick,
    onItemMouseEnter,
    onItemMouseLeave,
    onToggleChecked,
    onToggleCollapsed,
    visibleIcon
  } = _ref;
  const disabledGroup = items.length === 0;
  return /*#__PURE__*/_react.default.createElement("li", {
    className: (0, _classnames.default)('pipeline-nodelist__group', "pipeline-nodelist__group--type-".concat(id), "pipeline-nodelist__group--kind-".concat(kind), {
      'pipeline-nodelist__group--all-unchecked': allUnchecked
    })
  }, /*#__PURE__*/_react.default.createElement("h3", {
    className: "pipeline-nodelist__heading"
  }, /*#__PURE__*/_react.default.createElement(_nodeListRow.default, {
    allUnchecked: allUnchecked,
    checked: checked,
    disabled: disabledGroup,
    id: id,
    invisibleIcon: invisibleIcon,
    kind: kind,
    label: name,
    name: name,
    onChange: e => {
      onToggleChecked(id, !e.target.checked);
    },
    rowType: "filter",
    visibleIcon: visibleIcon
  }, /*#__PURE__*/_react.default.createElement("button", {
    "aria-label": "".concat(collapsed ? 'Show' : 'Hide', " ").concat(name.toLowerCase()),
    className: (0, _classnames.default)('pipeline-type-group-toggle', {
      'pipeline-type-group-toggle--alt': collapsed,
      'pipeline-type-group-toggle--disabled': disabledGroup
    }),
    disabled: disabledGroup,
    onClick: () => onToggleCollapsed(id)
  }))), /*#__PURE__*/_react.default.createElement(_nodeListRowList.default, {
    collapsed: collapsed,
    group: group,
    items: items,
    onItemChange: onItemChange,
    onItemClick: onItemClick,
    onItemMouseEnter: onItemMouseEnter,
    onItemMouseLeave: onItemMouseLeave
  }));
};
exports.NodeListGroup = NodeListGroup;
var _default = exports.default = NodeListGroup;