"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _reactCustomScrollbars = require("react-custom-scrollbars-2");
var _searchList = _interopRequireDefault(require("../search-list"));
var _nodeListGroups = _interopRequireDefault(require("./node-list-groups"));
var _nodeListTree = _interopRequireDefault(require("./node-list-tree"));
var _splitPanel = _interopRequireDefault(require("../split-panel"));
/**
 * Scrollable list of toggleable items, with search & filter functionality
 */
const NodeList = _ref => {
  let {
    faded,
    items,
    modularPipelinesTree,
    modularPipelinesSearchResult,
    groups,
    searchValue,
    getGroupState,
    onUpdateSearchValue,
    onGroupToggleChanged,
    onItemClick,
    onItemMouseEnter,
    onItemMouseLeave,
    onItemChange,
    onModularPipelineToggleExpanded,
    focusMode,
    disabledModularPipeline,
    onResetFilter,
    isResetFilterActive
  } = _ref;
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('pipeline-nodelist', {
      'pipeline-nodelist--fade': faded
    })
  }, /*#__PURE__*/_react.default.createElement(_searchList.default, {
    onUpdateSearchValue: onUpdateSearchValue,
    searchValue: searchValue
  }), /*#__PURE__*/_react.default.createElement(_splitPanel.default, null, _ref2 => {
    let {
      isResizing,
      props: {
        container,
        panelA,
        panelB,
        handle
      }
    } = _ref2;
    return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
      className: (0, _classnames.default)('pipeline-nodelist__split', {
        'pipeline-nodelist__split--resizing': isResizing
      })
    }, container), /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
      className: "pipeline-nodelist__elements-panel"
    }, panelA), /*#__PURE__*/_react.default.createElement(_reactCustomScrollbars.Scrollbars, {
      className: "pipeline-nodelist-scrollbars",
      style: {
        width: 'auto'
      },
      autoHide: true,
      hideTracksWhenNotNeeded: true
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "pipeline-nodelist-section"
    }, /*#__PURE__*/_react.default.createElement(_nodeListTree.default, {
      modularPipelinesSearchResult: modularPipelinesSearchResult,
      modularPipelinesTree: modularPipelinesTree,
      searchValue: searchValue,
      faded: faded,
      onItemClick: onItemClick,
      onItemMouseEnter: onItemMouseEnter,
      onItemMouseLeave: onItemMouseLeave,
      onItemChange: onItemChange,
      onNodeToggleExpanded: onModularPipelineToggleExpanded,
      focusMode: focusMode,
      disabledModularPipeline: disabledModularPipeline
    })))), /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
      className: "pipeline-nodelist__filter-panel"
    }, panelB), /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
      className: "pipeline-nodelist__split-handle"
    }, handle)), /*#__PURE__*/_react.default.createElement(_reactCustomScrollbars.Scrollbars, {
      className: "pipeline-nodelist-scrollbars",
      style: {
        width: 'auto'
      },
      autoHide: true,
      hideTracksWhenNotNeeded: true
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "pipeline-nodelist-section__filters"
    }, /*#__PURE__*/_react.default.createElement("h2", {
      className: "pipeline-nodelist-section__title"
    }, /*#__PURE__*/_react.default.createElement("span", null, "Filters")), /*#__PURE__*/_react.default.createElement("button", {
      disabled: !isResetFilterActive,
      onClick: onResetFilter,
      className: "pipeline-nodelist-section__reset-filter"
    }, "Reset")), /*#__PURE__*/_react.default.createElement(_nodeListGroups.default, {
      items: items,
      groups: groups,
      searchValue: searchValue,
      getGroupState: getGroupState,
      onItemClick: onItemClick,
      onItemMouseEnter: onItemMouseEnter,
      onItemMouseLeave: onItemMouseLeave,
      onItemChange: onItemChange,
      onGroupToggleChanged: onGroupToggleChanged
    }))));
  }));
};
var _default = exports.default = NodeList;