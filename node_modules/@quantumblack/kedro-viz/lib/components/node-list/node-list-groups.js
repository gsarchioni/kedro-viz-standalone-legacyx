"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _helpers = require("../../store/helpers");
var _nodeListGroup = _interopRequireDefault(require("./node-list-group"));
var _config = require("../../config");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const storedState = (0, _helpers.loadLocalStorage)(_config.localStorageName);
const NodeListGroups = _ref => {
  let {
    groups,
    items,
    onGroupToggleChanged,
    onItemChange,
    onItemClick,
    onItemMouseEnter,
    onItemMouseLeave,
    searchValue
  } = _ref;
  const [collapsed, setCollapsed] = (0, _react.useState)(storedState.groupsCollapsed || {});

  // Collapse/expand node group
  const onToggleGroupCollapsed = groupID => {
    const groupsCollapsed = {
      ...collapsed,
      [groupID]: !collapsed[groupID]
    };
    setCollapsed(groupsCollapsed);
    (0, _helpers.saveLocalStorage)(_config.localStorageName, {
      groupsCollapsed
    });
  };
  return /*#__PURE__*/_react.default.createElement("nav", {
    className: "pipeline-nodelist-section kedro"
  }, /*#__PURE__*/_react.default.createElement("ul", {
    className: "pipeline-nodelist__list"
  }, Object.values(groups).map(group => /*#__PURE__*/_react.default.createElement(_nodeListGroup.default, {
    allUnchecked: group.allUnchecked,
    checked: group.checked,
    collapsed: Boolean(searchValue) ? false : collapsed[group.id],
    group: group,
    id: group.id,
    invisibleIcon: group.invisibleIcon,
    items: items[group.id] || [],
    key: group.id,
    kind: group.kind,
    name: group.name,
    onItemChange: onItemChange,
    onItemClick: onItemClick,
    onItemMouseEnter: onItemMouseEnter,
    onItemMouseLeave: onItemMouseLeave,
    onToggleChecked: onGroupToggleChanged,
    onToggleCollapsed: onToggleGroupCollapsed,
    visibleIcon: group.visibleIcon
  }))));
};
var _default = exports.default = NodeListGroups;