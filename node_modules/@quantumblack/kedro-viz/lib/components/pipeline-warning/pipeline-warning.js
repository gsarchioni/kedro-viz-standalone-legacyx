"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapStateToProps = exports.mapDispatchToProps = exports.default = exports.PipelineWarning = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _reactRedux = require("react-redux");
var _actions = require("../../actions");
var _nodes = require("../../selectors/nodes");
var _layout = require("../../selectors/layout");
var _useGeneratePathname = require("../../utils/hooks/use-generate-pathname");
var _button = _interopRequireDefault(require("../ui/button"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const PipelineWarningContent = _ref => {
  let {
    isVisible,
    title,
    subtitle,
    buttons = [],
    sidebarVisible
  } = _ref;
  if (!isVisible) {
    return null;
  }
  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('kedro', 'pipeline-warning', {
      'pipeline-warning--sidebar-visible': sidebarVisible
    })
  }, /*#__PURE__*/_react.default.createElement("h2", {
    className: "pipeline-warning__title"
  }, title), /*#__PURE__*/_react.default.createElement("p", {
    className: "pipeline-warning__subtitle"
  }, subtitle), /*#__PURE__*/_react.default.createElement("div", {
    className: "pipeline-warning__button-wrapper"
  }, buttons.map((buttonProps, index) => /*#__PURE__*/_react.default.createElement(_button.default, (0, _extends2.default)({
    key: index
  }, buttonProps)))));
};
const PipelineWarning = _ref2 => {
  let {
    errorMessage,
    invalidUrl,
    nodes,
    onDisable,
    onHide,
    sidebarVisible,
    visible,
    onResetClick
  } = _ref2;
  const [componentLoaded, setComponentLoaded] = (0, _react.useState)(false);
  const isEmptyPipeline = nodes.length === 0;
  const {
    toFlowchartPage
  } = (0, _useGeneratePathname.useGeneratePathname)();

  // Only run this once, when the component mounts.
  (0, _react.useEffect)(() => {
    const timer = setTimeout(() => {
      setComponentLoaded(true);
    }, 1500);
    return () => clearTimeout(timer);
  }, []);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(PipelineWarningContent, {
    isVisible: visible,
    title: "Whoa, that\u2019s a chonky pipeline!",
    subtitle: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "This graph contains ", /*#__PURE__*/_react.default.createElement("b", null, nodes.length), " elements, which will take a while to render. You can use the sidebar controls to select a smaller graph."),
    buttons: [{
      onClick: onHide,
      children: 'Render it anyway'
    }, {
      mode: 'secondary',
      onClick: onDisable,
      size: 'small',
      children: "Don't show this again"
    }],
    sidebarVisible: sidebarVisible
  }), /*#__PURE__*/_react.default.createElement(PipelineWarningContent, {
    isVisible: isEmptyPipeline && componentLoaded,
    title: "Oops, there's nothing to see here",
    subtitle: "This selection has nothing. Please unselect your filters or modular pipeline selection to see pipeline elements.",
    sidebarVisible: sidebarVisible
  }), /*#__PURE__*/_react.default.createElement(PipelineWarningContent, {
    isVisible: invalidUrl && componentLoaded,
    title: "Oops, this URL isn't valid",
    subtitle: "".concat(errorMessage, ". Perhaps you've deleted the entity \uD83D\uDE48 or it may be a typo \uD83D\uDE07"),
    buttons: [{
      onClick: () => {
        toFlowchartPage();
        onResetClick();
      },
      children: 'Reset view'
    }],
    sidebarVisible: sidebarVisible
  }));
};
exports.PipelineWarning = PipelineWarning;
const mapStateToProps = state => ({
  nodes: (0, _nodes.getVisibleNodes)(state),
  sidebarVisible: state.visible.sidebar,
  theme: state.theme,
  visible: (0, _layout.getTriggerLargeGraphWarning)(state)
});
exports.mapStateToProps = mapStateToProps;
const mapDispatchToProps = dispatch => ({
  onDisable: () => {
    dispatch((0, _actions.changeFlag)('sizewarning', false));
  },
  onHide: () => {
    dispatch((0, _actions.toggleIgnoreLargeWarning)(true));
  }
});
exports.mapDispatchToProps = mapDispatchToProps;
var _default = exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(PipelineWarning);