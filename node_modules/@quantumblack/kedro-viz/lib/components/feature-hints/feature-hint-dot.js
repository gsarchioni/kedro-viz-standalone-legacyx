"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapStateToProps = exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactRedux = require("react-redux");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const FeatureHintDot = _ref => {
  let {
    appState,
    featureHintsContent,
    featureHintStep,
    hideDot,
    requestedHintClose
  } = _ref;
  const [elementCenter, setElementCenter] = (0, _react.useState)({
    x: null,
    y: null
  });
  const [hideHighlightDot, setHideHighlightDot] = (0, _react.useState)(hideDot);
  (0, _react.useEffect)(() => {
    setHideHighlightDot(hideDot);
  }, [hideDot]);
  (0, _react.useEffect)(() => {
    const findAndSetCoords = elementId => {
      if (!elementId || requestedHintClose) {
        return;
      }
      const $element = document.querySelector(elementId);
      if ($element) {
        const {
          left,
          top,
          width,
          height
        } = $element.getBoundingClientRect();
        setHideHighlightDot(false);
        setElementCenter({
          x: left + width / 2,
          y: top + height / 2
        });
      } else {
        setHideHighlightDot(true);
      }
    };
    if (!featureHintsContent[featureHintStep].elementId) {
      setHideHighlightDot(true);
    }
    findAndSetCoords(featureHintsContent[featureHintStep].elementId);

    // Use `appState` to track when the graph layout is changing, updating the
    // position of the feature hint accordingly.
  }, [appState, featureHintStep, featureHintsContent, requestedHintClose]);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "feature-hints__highlightDot",
    style: {
      left: "".concat(elementCenter.x, "px"),
      opacity: hideHighlightDot ? 0 : 1,
      top: "".concat(elementCenter.y, "px")
    }
  }, /*#__PURE__*/_react.default.createElement("svg", {
    fill: "none",
    height: "100",
    viewBox: "0 0 100 100",
    width: "100"
  }, /*#__PURE__*/_react.default.createElement("circle", {
    cx: "50",
    cy: "50",
    fillOpacity: "0.1",
    fill: "url(#paint0_radial_103_11727)",
    r: "49.5",
    stroke: "#FFBC00",
    strokeWidth: 1.5
  }), /*#__PURE__*/_react.default.createElement("defs", null, /*#__PURE__*/_react.default.createElement("radialGradient", {
    cx: "0",
    cy: "0",
    gradientTransform: "translate(50 50) rotate(90) scale(50)",
    gradientUnits: "userSpaceOnUse",
    id: "paint0_radial_103_11727",
    r: "1"
  }, /*#__PURE__*/_react.default.createElement("stop", {
    offset: "0.140625",
    stopColor: "#FFE300",
    stopOpacity: "0"
  }), /*#__PURE__*/_react.default.createElement("stop", {
    offset: "1",
    stopColor: "#FFE300"
  })))));
};
const mapStateToProps = state => ({
  appState: state
});
exports.mapStateToProps = mapStateToProps;
var _default = exports.default = (0, _reactRedux.connect)(mapStateToProps)(FeatureHintDot);