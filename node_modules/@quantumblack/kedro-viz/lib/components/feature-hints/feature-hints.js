"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapStateToProps = exports.mapDispatchToProps = exports.localStorageKeyFeatureHintsStep = exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactRedux = require("react-redux");
var _metadata = require("../../selectors/metadata");
var _helpers = require("../../store/helpers");
var _config = require("../../config");
var _actions = require("../../actions");
var _utils = require("../../utils");
var _button = _interopRequireDefault(require("../ui/button"));
var _close = _interopRequireDefault(require("../icons/close"));
var _delayedRenderer = _interopRequireDefault(require("../ui/delayed-renderer"));
var _featureHintDot = _interopRequireDefault(require("./feature-hint-dot"));
var _featureHintsContent = require("./feature-hints-content");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const localStorageKeyShowHints = 'showFeatureHints';
const localStorageKeyFeatureHintsStep = exports.localStorageKeyFeatureHintsStep = 'featureHintStep';
const updatedFeatureHintsContent = (0, _utils.isRunningLocally)() ? _featureHintsContent.featureHintsContent : _featureHintsContent.featureHintsContent.slice(1);
const numFeatureHints = updatedFeatureHintsContent.length;
const FeatureHints = _ref => {
  let {
    metadataVisible,
    onToggleShowFeatureHints
  } = _ref;
  const [areFeatureHintsShown, setAreFeatureHintsShown] = (0, _react.useState)(false);
  const [featureHintStep, setFeatureHintStep] = (0, _react.useState)(0);
  const [hideHighlightDot, setHideHighlightDot] = (0, _react.useState)(false);
  const [requestedHintClose, setRequestedHintClose] = (0, _react.useState)(false);
  (0, _react.useEffect)(() => {
    const localStorageState = (0, _helpers.loadLocalStorage)(_config.localStorageName);
    if (localStorageState[localStorageKeyShowHints]) {
      setAreFeatureHintsShown(true);
    } else {
      setAreFeatureHintsShown(false);
    }
    if (localStorageState.featureHintStep) {
      setFeatureHintStep(localStorageState.featureHintStep);
    }
  }, []);
  (0, _react.useEffect)(() => {
    if (!updatedFeatureHintsContent[featureHintStep].elementId) {
      setHideHighlightDot(true);
    }
    (0, _helpers.saveLocalStorage)(_config.localStorageName, {
      [localStorageKeyFeatureHintsStep]: featureHintStep
    });
  }, [featureHintStep]);
  const triggerCloseHints = () => {
    setRequestedHintClose(true);
    setHideHighlightDot(true);
    onToggleShowFeatureHints(false);
    setTimeout(() => {
      triggerLocalStorageSave();
    }, 4000);
  };
  const triggerLocalStorageSave = () => {
    setAreFeatureHintsShown(false);
    (0, _helpers.saveLocalStorage)(_config.localStorageName, {
      [localStorageKeyFeatureHintsStep]: 0,
      [localStorageKeyShowHints]: false
    });
  };
  if (areFeatureHintsShown === false) {
    return null;
  }
  return /*#__PURE__*/_react.default.createElement(_delayedRenderer.default, null, /*#__PURE__*/_react.default.createElement(_featureHintDot.default, {
    featureHintsContent: updatedFeatureHintsContent,
    featureHintStep: featureHintStep,
    hideDot: hideHighlightDot,
    requestedHintClose: requestedHintClose
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "feature-hints",
    style: {
      right: metadataVisible ? "".concat(_config.metaSidebarWidth.open + 36, "px") : '36px'
    }
  }, requestedHintClose ? /*#__PURE__*/_react.default.createElement("p", {
    className: "feature-hints__reopen-message"
  }, "You can revisit these hints at any time in the Settings panel.") : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    className: "feature-hints__nav"
  }, featureHintStep + 1, " of ", numFeatureHints, /*#__PURE__*/_react.default.createElement("div", {
    className: "feature-hints__close",
    onClick: () => triggerCloseHints()
  }, /*#__PURE__*/_react.default.createElement(_close.default, null))), /*#__PURE__*/_react.default.createElement("div", {
    className: "feature-hints__header"
  }, updatedFeatureHintsContent[featureHintStep].title), updatedFeatureHintsContent[featureHintStep].image && /*#__PURE__*/_react.default.createElement("img", {
    alt: updatedFeatureHintsContent[featureHintStep].title,
    src: updatedFeatureHintsContent[featureHintStep].image
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "feature-hints__description"
  }, updatedFeatureHintsContent[featureHintStep].description), /*#__PURE__*/_react.default.createElement("div", {
    className: "feature-hints__buttonsWrapper"
  }, /*#__PURE__*/_react.default.createElement("div", null, updatedFeatureHintsContent[featureHintStep].learnMoreLink ? /*#__PURE__*/_react.default.createElement("a", {
    href: updatedFeatureHintsContent[featureHintStep].learnMoreLink,
    rel: "noreferrer",
    target: "_blank"
  }, /*#__PURE__*/_react.default.createElement(_button.default, {
    mode: "secondary",
    size: "small"
  }, "Learn more")) : null), /*#__PURE__*/_react.default.createElement("div", {
    className: "feature-hints__backNextButtons"
  }, featureHintStep > 0 ? /*#__PURE__*/_react.default.createElement(_button.default, {
    mode: "secondary",
    onClick: () => setFeatureHintStep(featureHintStep - 1),
    size: "small"
  }, "Back") : null, /*#__PURE__*/_react.default.createElement(_button.default, {
    mode: "primary",
    onClick: () => featureHintStep + 1 === numFeatureHints ? triggerCloseHints() : setFeatureHintStep(featureHintStep + 1),
    size: "small"
  }, featureHintStep + 1 === numFeatureHints ? 'Close' : 'Next'))))));
};
const mapDispatchToProps = (dispatch, ownProps) => ({
  onToggleShowFeatureHints: () => {
    dispatch((0, _actions.toggleShowFeatureHints)(false));
  },
  ...ownProps
});
exports.mapDispatchToProps = mapDispatchToProps;
const mapStateToProps = state => {
  return {
    metadataVisible: (0, _metadata.getVisibleMetaSidebar)(state)
  };
};
exports.mapStateToProps = mapStateToProps;
var _default = exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(FeatureHints);