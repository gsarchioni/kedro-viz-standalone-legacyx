"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactRedux = require("react-redux");
require("what-input");
var _store = _interopRequireDefault(require("../../store"));
var _fp = require("lodash/fp");
var _actions = require("../../actions");
var _pipelines = require("../../actions/pipelines");
var _wrapper = _interopRequireDefault(require("../wrapper"));
var _initialState = _interopRequireWildcard(require("../../store/initial-state"));
var _flags = require("../../utils/flags");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * Entry-point component for the use-case where Kedro-Viz is imported as a
 * library/package into a larger application, rather than run as a standalone
 * app. If run as a standalone then 'Container' is the top-level component.
 *
 * This component intialises anything that might be needed in both use-cases,
 * e.g. the Redux store, webfont loading, announcing flags, etc.
 */
class App extends _react.default.Component {
  constructor(props) {
    super(props);
    const initialState = (0, _initialState.default)(props);
    this.store = (0, _store.default)(initialState, this.props.data);
  }
  componentDidMount() {
    if (this.props.data === 'json') {
      this.store.dispatch((0, _pipelines.loadInitialPipelineData)());
    }
    this.announceFlags(this.store.getState().flags);
  }
  componentDidUpdate(prevProps) {
    if (prevProps.data !== this.props.data) {
      this.updatePipelineData();
    }
    if (!(0, _fp.isEqual)(prevProps.options, this.props.options)) {
      this.store.dispatch((0, _actions.updateStateFromOptions)(this.props.options));
    }
  }

  /**
   * Shows a console message regarding the given flags
   */
  announceFlags(flags) {
    const message = (0, _flags.getFlagsMessage)(flags);
    if (message && typeof jest === 'undefined') {
      console.info(message);
    }
  }

  /**
   * Dispatch an action to update the store with new pipeline data
   */
  updatePipelineData() {
    const newState = (0, _initialState.preparePipelineState)(this.props.data, true);
    this.store.dispatch((0, _actions.resetData)(newState));
  }
  render() {
    return this.props.data ? /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
      store: this.store
    }, /*#__PURE__*/_react.default.createElement(_wrapper.default, null)) : null;
  }
}
App.propTypes = {
  /**
   * Determines what pipeline data will be displayed on the chart.
   * You can supply an object containing lists of edges, nodes, tags -
   * See /src/utils/data for examples of the expected data format.
   * Alternatively, the string 'json' indicates that data is being
   * loaded asynchronously from /public/api/nodes.json
   */
  data: _propTypes.default.oneOfType([_propTypes.default.oneOf(['json']), _propTypes.default.shape({
    edges: _propTypes.default.array.isRequired,
    layers: _propTypes.default.array,
    nodes: _propTypes.default.array.isRequired,
    tags: _propTypes.default.array
  })]),
  options: _propTypes.default.shape({
    /**
     * Specify the theme: Either 'light' or 'dark'.
     * If set, this will override the localStorage value.
     */
    theme: _propTypes.default.oneOf(['dark', 'light']),
    /**
     * Determines if certain elements are displayed, e.g globalNavigation, sidebar
     */
    display: _propTypes.default.shape({
      globalNavigation: _propTypes.default.bool,
      sidebar: _propTypes.default.bool,
      miniMap: _propTypes.default.bool,
      expandPipelinesBtn: _propTypes.default.bool,
      exportBtn: _propTypes.default.bool,
      labelBtn: _propTypes.default.bool,
      layerBtn: _propTypes.default.bool,
      zoomToolBar: _propTypes.default.bool,
      metadataPanel: _propTypes.default.bool
    }),
    /**
     * Override the default enabled/disabled tags
     */
    tag: _propTypes.default.shape({
      enabled: _propTypes.default.objectOf(_propTypes.default.bool)
    }),
    /**
     * Override the default enabled/disabled node types
     */
    nodeType: _propTypes.default.shape({
      disabled: _propTypes.default.shape({
        parameters: _propTypes.default.bool,
        task: _propTypes.default.bool,
        data: _propTypes.default.bool
      })
    })
  }),
  expandAllPipelines: _propTypes.default.bool
};
var _default = exports.default = App;