"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _buttonTimeoutContext = require("../../../utils/button-timeout-context");
var _runDatasetLoader = require("../run-dataset/run-dataset-loader");
var _runMetadataLoader = require("../run-metadata/run-metadata-loader");
var _metricsPlots = _interopRequireDefault(require("../metrics-plots"));
var _runDataset = _interopRequireDefault(require("../run-dataset"));
var _runDetailsModal = _interopRequireDefault(require("../run-details-modal"));
var _runExportModal = _interopRequireDefault(require("../run-export-modal"));
var _runMetadata = _interopRequireDefault(require("../run-metadata"));
var _runPlotsModal = _interopRequireDefault(require("../run-plots-modal"));
var _config = require("../../../config");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const Details = _ref => {
  let {
    activeTab,
    enableComparisonView,
    enableShowChanges,
    isKedroDatasetsCompatible,
    isRunDataLoading,
    newRunAdded,
    onRunSelection,
    pinnedRun,
    runDataError,
    runMetadata,
    runTrackingData,
    selectedRunIds,
    setActiveTab,
    setIsDisplayingMetrics,
    setPinnedRun,
    setShowRunDetailsModal,
    setShowRunExportModal,
    setShowRunPlotsModal,
    showRunDetailsModal,
    showRunExportModal,
    showRunPlotsModal,
    sidebarVisible,
    theme
  } = _ref;
  const [runMetadataToEdit, setRunMetadataToEdit] = (0, _react.useState)(null);
  const [runDatasetToShow, setRunDatasetToShow] = (0, _react.useState)({});
  const [showSingleRunLoader, setShowSingleRunLoader] = (0, _react.useState)(false);
  const [showRunLoader, setRunLoader] = (0, _react.useState)(false);

  // Delay showing loader for 0.2s so it has enough time to load the data first
  (0, _react.useEffect)(() => {
    // For single run
    if (isRunDataLoading && !enableComparisonView) {
      const showSingleRunLoaderTimer = setTimeout(() => {
        setShowSingleRunLoader(true);
      }, 200);
      return () => clearTimeout(showSingleRunLoaderTimer);
    } else {
      setShowSingleRunLoader(false);
    }

    // For multiple runs when the comparison mode is active
    if (isRunDataLoading && newRunAdded) {
      const showRunLoaderTimer = setTimeout(() => {
        setRunLoader(true);
      }, 200);
      return () => clearTimeout(showRunLoaderTimer);
    } else {
      setRunLoader(false);
    }
  }, [isRunDataLoading, newRunAdded, enableComparisonView]);
  (0, _react.useEffect)(() => {
    if (runMetadata && !enableComparisonView) {
      const metadata = runMetadata.find(run => run.id === selectedRunIds[0]);
      setRunMetadataToEdit(metadata);
    }
  }, [enableComparisonView, runMetadata, selectedRunIds]);
  (0, _react.useEffect)(() => {
    if (activeTab === 'Metrics') {
      setIsDisplayingMetrics(true);
    } else {
      setIsDisplayingMetrics(false);
    }
  }, [activeTab, setIsDisplayingMetrics]);
  const kedroDatasetsCompatibilityMessage = () => {
    return !isKedroDatasetsCompatible ? /*#__PURE__*/_react.default.createElement("div", {
      className: "kedroDatasetsCompatible"
    }, /*#__PURE__*/_react.default.createElement("p", null, "Kedro-Viz Experiment Tracking is only supported with kedro-datasets version 2.1.0 and above. Please update kedro-datasets in order to use this feature.")) : null;
  };
  const isSingleRun = (runMetadata === null || runMetadata === void 0 ? void 0 : runMetadata.length) === 1 ? true : false;
  if (runDataError) {
    return null;
  }
  if (showSingleRunLoader) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)('kedro', 'details-mainframe', {
        'details-mainframe--sidebar-visible': sidebarVisible
      })
    }, /*#__PURE__*/_react.default.createElement(_runMetadataLoader.SingleRunMetadataLoader, {
      theme: theme
    }), /*#__PURE__*/_react.default.createElement(_runDatasetLoader.SingleRunDatasetLoader, {
      theme: theme
    }));
  }
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_buttonTimeoutContext.ButtonTimeoutContextProvider, null, /*#__PURE__*/_react.default.createElement(_runDetailsModal.default, {
    runMetadataToEdit: runMetadataToEdit,
    runs: runMetadata,
    setShowRunDetailsModal: setShowRunDetailsModal,
    theme: theme,
    visible: showRunDetailsModal
  }), /*#__PURE__*/_react.default.createElement(_runExportModal.default, {
    runMetadata: runMetadata,
    runTrackingData: runTrackingData,
    setShowRunExportModal: setShowRunExportModal,
    theme: theme,
    visible: showRunExportModal
  }), /*#__PURE__*/_react.default.createElement(_runPlotsModal.default, {
    runDatasetToShow: runDatasetToShow,
    setShowRunPlotsModal: setShowRunPlotsModal,
    theme: theme,
    visible: showRunPlotsModal
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('kedro', 'details-mainframe', {
      'details-mainframe--sidebar-visible': sidebarVisible
    })
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "details__tabs"
  }, _config.tabLabels.map(tab => {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)('tabs__item', {
        'tabs__item--active': activeTab === tab
      }),
      key: tab,
      onClick: () => setActiveTab(tab)
    }, tab);
  })), activeTab === 'Metrics' ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, kedroDatasetsCompatibilityMessage(), /*#__PURE__*/_react.default.createElement(_metricsPlots.default, {
    selectedRunIds: selectedRunIds,
    sidebarVisible: sidebarVisible
  })) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, kedroDatasetsCompatibilityMessage(), /*#__PURE__*/_react.default.createElement(_runMetadata.default, {
    activeTab: activeTab,
    enableComparisonView: enableComparisonView,
    enableShowChanges: enableShowChanges,
    isSingleRun: isSingleRun,
    onRunSelection: onRunSelection,
    pinnedRun: pinnedRun,
    runs: runMetadata,
    setPinnedRun: setPinnedRun,
    setRunMetadataToEdit: setRunMetadataToEdit,
    setShowRunDetailsModal: setShowRunDetailsModal,
    showLoader: showRunLoader,
    theme: theme
  }), /*#__PURE__*/_react.default.createElement(_runDataset.default, {
    activeTab: activeTab,
    enableComparisonView: enableComparisonView,
    enableShowChanges: enableShowChanges,
    isSingleRun: isSingleRun,
    pinnedRun: pinnedRun,
    runMetadata: runMetadata,
    selectedRunIds: selectedRunIds,
    setRunDatasetToShow: setRunDatasetToShow,
    setShowRunPlotsModal: setShowRunPlotsModal,
    showLoader: showRunLoader,
    trackingData: runTrackingData,
    theme: theme
  }))));
};
var _default = exports.default = Details;