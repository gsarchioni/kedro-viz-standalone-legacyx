"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactRedux = require("react-redux");
var _classnames = _interopRequireDefault(require("classnames"));
var _updateReminderContent = require("./update-reminder-content");
var _metadata = require("../../selectors/metadata");
var _button = _interopRequireDefault(require("../ui/button"));
var _commandCopier = _interopRequireDefault(require("../ui/command-copier/command-copier"));
var _iconButton = _interopRequireDefault(require("../ui/icon-button"));
var _close = _interopRequireDefault(require("../icons/close"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function replaceBackticksWithCodeBlocks(text) {
  const regex = /`([^`]+)`/g;
  return text.replace(regex, '<code>$1</code>');
}
const UpdateReminder = _ref => {
  let {
    isOutdated,
    versions,
    visibleMetaSidebar
  } = _ref;
  const [dismissed, setDismissed] = (0, _react.useState)(false);
  const [expand, setExpand] = (0, _react.useState)(false);
  const {
    latest,
    installed
  } = versions;
  const command = 'pip install -U kedro-viz';
  const handleKeyDown = event => {
    if (event.keyCode === 27) {
      setExpand(false);
    }
  };
  (0, _react.useEffect)(() => {
    window.addEventListener('keydown', handleKeyDown);
    return () => window.removeEventListener('keydown', handleKeyDown);
  }, []);
  (0, _react.useEffect)(() => {
    if (visibleMetaSidebar) {
      setExpand(false);
      setDismissed(true);
    }
  }, [visibleMetaSidebar]);
  if (expand) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "update-reminder"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)('update-reminder-expanded-header', {
        'update-reminder-expanded-header--up-to-date': !isOutdated
      })
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "close-button-container"
    }, /*#__PURE__*/_react.default.createElement(_iconButton.default, {
      ariaLabel: "Close Upgrade Reminder Panel",
      className: "close-button",
      container: _react.default.Fragment,
      icon: _close.default,
      onClick: () => setExpand(false)
    }))), /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)('update-reminder-expanded-detail', {
        'update-reminder-expanded-detail--up-to-date': !isOutdated
      })
    }, isOutdated ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("h3", null, "Kedro-Viz ", latest, " is here!"), /*#__PURE__*/_react.default.createElement("p", null, "We\u2019re excited to announce Kedro-Viz ", latest, " has been released. To update Kedro Viz, copy and paste the following update command into your terminal.", ' ', /*#__PURE__*/_react.default.createElement("a", {
      href: "https://github.com/kedro-org/kedro-viz/releases",
      target: "_blank",
      rel: "noopener noreferrer"
    }, "View full changelog.")), /*#__PURE__*/_react.default.createElement("p", {
      className: "subtext"
    }, "Update command"), /*#__PURE__*/_react.default.createElement("div", {
      className: "command-copier"
    }, /*#__PURE__*/_react.default.createElement(_commandCopier.default, {
      command: command,
      isCommand: true,
      dataTest: 'update-reminder-copy-command'
    }))) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("h3", null, "You're up to date"), /*#__PURE__*/_react.default.createElement("p", null, "Kedro-Viz ", latest))), /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)('update-reminder-expanded-content', {
        'update-reminder-expanded-content--up-to-date': !isOutdated
      })
    }, /*#__PURE__*/_react.default.createElement("h3", null, isOutdated ? "What's new" : 'Release highlights'), /*#__PURE__*/_react.default.createElement("p", null, _updateReminderContent.updateContent.date), _updateReminderContent.updateContent.features.map(feature => {
      return /*#__PURE__*/_react.default.createElement("div", {
        className: "update-reminder-expanded-content--feature",
        key: feature.title
      }, /*#__PURE__*/_react.default.createElement("h4", {
        dangerouslySetInnerHTML: {
          __html: replaceBackticksWithCodeBlocks(feature.title)
        }
      }), feature.image.length > 0 && /*#__PURE__*/_react.default.createElement("img", {
        alt: feature.title,
        src: feature.image
      }), /*#__PURE__*/_react.default.createElement("p", {
        dangerouslySetInnerHTML: {
          __html: replaceBackticksWithCodeBlocks(feature.copy)
        }
      }), feature.buttonLink.length > 0 && /*#__PURE__*/_react.default.createElement("a", {
        href: feature.buttonLink,
        rel: "noreferrer",
        target: "_blank"
      }, /*#__PURE__*/_react.default.createElement(_button.default, {
        size: "small"
      }, feature.buttonText)));
    })));
  }
  if (isOutdated && dismissed) {
    return /*#__PURE__*/_react.default.createElement("span", {
      className: "update-reminder-version-tag update-reminder-version-tag--outdated",
      onClick: () => setExpand(true)
    }, /*#__PURE__*/_react.default.createElement("span", null), "Kedro-Viz ", installed);
  } else if (!isOutdated) {
    return /*#__PURE__*/_react.default.createElement("span", {
      className: "update-reminder-version-tag update-reminder-version-tag--up-to-date",
      onClick: () => setExpand(true)
    }, "Kedro-Viz ", installed);
  }
  if (isOutdated && !dismissed) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "update-reminder-unexpanded"
    }, /*#__PURE__*/_react.default.createElement("p", null, "Kedro-Viz ", latest, " is here! "), /*#__PURE__*/_react.default.createElement("div", {
      className: "buttons-container"
    }, /*#__PURE__*/_react.default.createElement("button", {
      className: "kedro",
      onClick: () => setExpand(true)
    }, "Expand"), /*#__PURE__*/_react.default.createElement("button", {
      className: "kedro",
      onClick: () => setDismissed(true)
    }, "Dismiss")));
  }
};
const mapStateToProps = state => ({
  visibleMetaSidebar: (0, _metadata.getVisibleMetaSidebar)(state)
});
var _default = exports.default = (0, _reactRedux.connect)(mapStateToProps)(UpdateReminder);