"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _urlBox = _interopRequireDefault(require("../url-box/url-box"));
var _button = _interopRequireDefault(require("../../ui/button"));
var _dropdown = _interopRequireDefault(require("../../ui/dropdown"));
var _menuOption = _interopRequireDefault(require("../../ui/menu-option"));
var _utils = require("../utils");
const PublishedView = _ref => {
  let {
    hostingPlatformLocalStorageVal,
    hostingPlatforms,
    onChange,
    onCopyClick,
    onRepublishClick,
    platform,
    showCopied
  } = _ref;
  const platformsKeysFromLocalStorage = Object.keys(hostingPlatformLocalStorageVal);
  const platformsValFromLocalStorage = Object.values(hostingPlatformLocalStorageVal);
  const url = platform ? hostingPlatformLocalStorageVal[platform]['endpoint'] : platformsValFromLocalStorage[0]['endpoint'];
  const filteredPlatforms = (0, _utils.getFilteredPlatforms)(hostingPlatforms, platformsKeysFromLocalStorage);
  const href = (0, _utils.handleResponseUrl)(url, platform || platformsValFromLocalStorage[0]['platform']);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
    className: "shareable-url-modal__published"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "shareable-url-modal__content-title"
  }, "Publish and Share Kedro-Viz"), platformsKeysFromLocalStorage.length === 1 ? /*#__PURE__*/_react.default.createElement(_urlBox.default, {
    url: url,
    onCopyClick: onCopyClick,
    href: href,
    showCopiedText: showCopied
  }) : /*#__PURE__*/_react.default.createElement("div", {
    className: "shareable-url-modal__published-dropdown-wrapper"
  }, /*#__PURE__*/_react.default.createElement(_dropdown.default, {
    dataTest: 'shareable-url-modal-republish-dropdown-hosting-platform',
    defaultText: platform && filteredPlatforms[platform] || Object.values(filteredPlatforms)[0],
    onChanged: onChange,
    width: null
  }, Object.entries(filteredPlatforms).map(_ref2 => {
    let [value, label] = _ref2;
    return /*#__PURE__*/_react.default.createElement(_menuOption.default, {
      className: (0, _classnames.default)({
        'pipeline-list__option--active': platform === value
      }),
      key: value,
      primaryText: label,
      value: value
    });
  })), /*#__PURE__*/_react.default.createElement(_urlBox.default, {
    className: "url-box__wrapper--half-width",
    url: url,
    onCopyClick: onCopyClick,
    href: href,
    showCopiedText: showCopied
  }))), /*#__PURE__*/_react.default.createElement("div", {
    className: "shareable-url-modal__published-action"
  }, /*#__PURE__*/_react.default.createElement("p", {
    className: "shareable-url-modal__published-action-text"
  }, "Republish Kedro-Viz to push new updates,", /*#__PURE__*/_react.default.createElement("br", null), "or publish and host Kedro-Viz with a new link."), /*#__PURE__*/_react.default.createElement(_button.default, {
    mode: "secondary",
    onClick: onRepublishClick,
    size: "small"
  }, "Republish")));
};
var _default = exports.default = PublishedView;