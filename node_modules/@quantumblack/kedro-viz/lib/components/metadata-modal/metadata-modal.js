"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapStateToProps = exports.mapDispatchToProps = exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactRedux = require("react-redux");
var _plotlyChart = _interopRequireDefault(require("../plotly-chart"));
var _previewTable = _interopRequireDefault(require("../preview-table"));
var _jsonObject = _interopRequireDefault(require("../../components/json-object"));
var _collapse = _interopRequireDefault(require("../icons/collapse"));
var _back = _interopRequireDefault(require("../icons/back"));
var _nodeIcon = _interopRequireDefault(require("../icons/node-icon"));
var _actions = require("../../actions");
var _shortType = _interopRequireDefault(require("../../utils/short-type"));
var _metadata = require("../../selectors/metadata");
const MetadataModal = _ref => {
  let {
    metadata,
    onToggle,
    visible,
    theme
  } = _ref;
  const hasPlot = (metadata === null || metadata === void 0 ? void 0 : metadata.previewType) === 'PlotlyPreview';
  const hasImage = (metadata === null || metadata === void 0 ? void 0 : metadata.previewType) === 'ImagePreview';
  const hasTable = (metadata === null || metadata === void 0 ? void 0 : metadata.previewType) === 'TablePreview';
  const hasJSON = (metadata === null || metadata === void 0 ? void 0 : metadata.previewType) === 'JSONPreview';
  const hasMetadataContent = hasPlot || hasImage || hasTable || hasJSON;
  if (!visible.metadataModal || !hasMetadataContent) {
    return null;
  }
  const nodeTypeIcon = (0, _shortType.default)(metadata === null || metadata === void 0 ? void 0 : metadata.datasetType, metadata === null || metadata === void 0 ? void 0 : metadata.type);
  const onCollapsePlotClick = () => {
    onToggle(false);
  };
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "pipeline-metadata-modal"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "pipeline-metadata-modal__top"
  }, /*#__PURE__*/_react.default.createElement("button", {
    className: "pipeline-metadata-modal__back",
    onClick: onCollapsePlotClick
  }, /*#__PURE__*/_react.default.createElement(_back.default, {
    className: "pipeline-metadata-modal__back-icon"
  }), /*#__PURE__*/_react.default.createElement("span", {
    className: "pipeline-metadata-modal__back-text"
  }, "Back")), /*#__PURE__*/_react.default.createElement("div", {
    className: "pipeline-metadata-modal__header"
  }, /*#__PURE__*/_react.default.createElement(_nodeIcon.default, {
    className: "pipeline-metadata-modal__icon",
    icon: nodeTypeIcon
  }), /*#__PURE__*/_react.default.createElement("span", {
    className: "pipeline-metadata-modal__title"
  }, metadata.name)), hasTable && /*#__PURE__*/_react.default.createElement("div", {
    className: "pipeline-metadata-modal__preview-text"
  }, "Previewing first", ' ', metadata.preview.data && metadata.preview.data.length, " rows")), hasPlot && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_plotlyChart.default, {
    data: metadata.preview.data,
    layout: metadata.preview.layout,
    view: "modal"
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "pipeline-metadata-modal__bottom"
  }, /*#__PURE__*/_react.default.createElement("button", {
    className: "pipeline-metadata-modal__collapse-plot",
    onClick: onCollapsePlotClick
  }, /*#__PURE__*/_react.default.createElement(_collapse.default, {
    className: "pipeline-metadata-modal__collapse-plot-icon"
  }), /*#__PURE__*/_react.default.createElement("span", {
    className: "pipeline-metadata-modal__collapse-plot-text"
  }, "Collapse Plotly Visualization")))), hasImage && /*#__PURE__*/_react.default.createElement("div", {
    className: "pipeline-matplotlib-chart"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "pipeline-metadata__plot-image-container"
  }, /*#__PURE__*/_react.default.createElement("img", {
    alt: "Matplotlib rendering",
    className: "pipeline-metadata__plot-image--expanded",
    src: "data:image/png;base64,".concat(metadata.preview)
  }))), hasTable && /*#__PURE__*/_react.default.createElement("div", {
    className: "pipeline-metadata-modal__preview"
  }, /*#__PURE__*/_react.default.createElement(_previewTable.default, {
    data: metadata.preview,
    size: "large"
  })), hasJSON && /*#__PURE__*/_react.default.createElement("div", {
    className: "pipeline-metadata-modal__preview-json"
  }, /*#__PURE__*/_react.default.createElement(_jsonObject.default, {
    value: JSON.parse(metadata.preview),
    theme: theme,
    style: {
      background: 'transparent',
      fontSize: '15px'
    },
    collapsed: 3
  })));
};
const mapStateToProps = state => ({
  metadata: (0, _metadata.getClickedNodeMetaData)(state),
  theme: state.theme,
  visible: state.visible
});
exports.mapStateToProps = mapStateToProps;
const mapDispatchToProps = dispatch => ({
  onToggle: value => {
    dispatch((0, _actions.togglePlotModal)(value));
  }
});
exports.mapDispatchToProps = mapDispatchToProps;
var _default = exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(MetadataModal);