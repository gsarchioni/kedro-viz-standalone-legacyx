"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.PrimaryToolbar = void 0;
var _react = _interopRequireDefault(require("react"));
var _classnames = _interopRequireDefault(require("classnames"));
var _iconButton = _interopRequireDefault(require("../ui/icon-button"));
var _menu = _interopRequireDefault(require("../icons/menu"));
/**
 * Toolbar to house buttons that controls display options for the main panel (flowchart, experiment details, etc)
 * @param {JSX} children The content to be rendered within the toolbar
 * @param {Function} onToggleSidebar Handle toggling of sidebar collapsable view
 * @param {Boolean} visible Handle display of tooltip text in relation to collapsable view
 */
const PrimaryToolbar = _ref => {
  let {
    children,
    onToggleSidebar,
    dataTest,
    visible = {
      sidebar: true
    }
  } = _ref;
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("ul", {
    className: "pipeline-primary-toolbar kedro"
  }, /*#__PURE__*/_react.default.createElement(_iconButton.default, {
    active: visible.sidebar,
    ariaLabel: "".concat(visible.sidebar ? 'Hide' : 'Show', " menu"),
    className: (0, _classnames.default)('pipeline-menu-button', 'pipeline-menu-button--menu', {
      'pipeline-menu-button--inverse': !visible.sidebar
    }),
    dataTest: dataTest,
    icon: _menu.default,
    labelText: "".concat(visible.sidebar ? 'Hide' : 'Show', " menu"),
    onClick: () => onToggleSidebar(!visible.sidebar)
  }), children));
};
exports.PrimaryToolbar = PrimaryToolbar;
var _default = exports.default = PrimaryToolbar;