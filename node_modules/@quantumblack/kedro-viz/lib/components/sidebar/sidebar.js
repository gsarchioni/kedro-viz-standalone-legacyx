"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Sidebar = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactRedux = require("react-redux");
var _classnames = _interopRequireDefault(require("classnames"));
var _experimentPrimaryToolbar = _interopRequireDefault(require("../experiment-tracking/experiment-primary-toolbar"));
var _flowchartPrimaryToolbar = _interopRequireDefault(require("../flowchart-primary-toolbar"));
var _minimap = _interopRequireDefault(require("../minimap"));
var _minimapToolbar = _interopRequireDefault(require("../minimap-toolbar"));
var _nodeList = _interopRequireDefault(require("../node-list"));
var _pipelineList = _interopRequireDefault(require("../pipeline-list"));
var _runsList = _interopRequireDefault(require("../experiment-tracking/runs-list"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * Main app container. Handles showing/hiding the sidebar nav, and theme classes.
 * @param {Boolean} props.visible Whether the sidebar is open/closed
 */
const Sidebar = _ref => {
  let {
    disableRunSelection,
    displayGlobalNavigation,
    displaySidebar,
    enableComparisonView,
    enableShowChanges,
    isDisplayingMetrics = false,
    isExperimentView = false,
    onRunSelection,
    onToggleComparisonView,
    runMetadata,
    runsListData,
    runTrackingData,
    selectedRunData,
    selectedRunIds,
    setEnableShowChanges,
    setSidebarVisible,
    showRunDetailsModal,
    sidebarVisible,
    visible,
    setShowRunExportModal
  } = _ref;
  const [pipelineIsOpen, togglePipeline] = (0, _react.useState)(false);
  if (isExperimentView) {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)('pipeline-sidebar', {
        'pipeline-sidebar--visible': sidebarVisible
      })
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "pipeline-ui pipeline-ui--experiment-tracking"
    }, /*#__PURE__*/_react.default.createElement(_runsList.default, {
      disableRunSelection: disableRunSelection,
      enableComparisonView: enableComparisonView,
      isDisplayingMetrics: isDisplayingMetrics,
      onRunSelection: onRunSelection,
      onToggleComparisonView: onToggleComparisonView,
      runData: runsListData,
      selectedRunIds: selectedRunIds
    })), /*#__PURE__*/_react.default.createElement("nav", {
      className: "pipeline-toolbar"
    }, /*#__PURE__*/_react.default.createElement(_experimentPrimaryToolbar.default, {
      displaySidebar: displaySidebar,
      enableComparisonView: enableComparisonView,
      enableShowChanges: enableShowChanges,
      runMetadata: runMetadata,
      runTrackingData: runTrackingData,
      selectedRunData: selectedRunData,
      setEnableShowChanges: setEnableShowChanges,
      setSidebarVisible: setSidebarVisible,
      showChangesIconDisabled: !(selectedRunIds.length > 1),
      showRunDetailsModal: showRunDetailsModal,
      sidebarVisible: sidebarVisible,
      setShowRunExportModal: setShowRunExportModal
    }))));
  } else {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
      className: (0, _classnames.default)('pipeline-sidebar', {
        'pipeline-sidebar--visible': visible,
        'pipeline-sidebar--no-global-toolbar': !displayGlobalNavigation
      })
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "pipeline-ui"
    }, /*#__PURE__*/_react.default.createElement(_pipelineList.default, {
      onToggleOpen: togglePipeline
    }), /*#__PURE__*/_react.default.createElement(_nodeList.default, {
      faded: pipelineIsOpen
    })), /*#__PURE__*/_react.default.createElement("nav", {
      className: "pipeline-toolbar"
    }, /*#__PURE__*/_react.default.createElement(_flowchartPrimaryToolbar.default, null), /*#__PURE__*/_react.default.createElement(_minimapToolbar.default, null)), /*#__PURE__*/_react.default.createElement(_minimap.default, null)));
  }
};
exports.Sidebar = Sidebar;
const mapStateToProps = state => ({
  displayGlobalNavigation: state.display.globalNavigation,
  displaySidebar: state.display.sidebar,
  visible: state.visible.sidebar
});
var _default = exports.default = (0, _reactRedux.connect)(mapStateToProps)(Sidebar);