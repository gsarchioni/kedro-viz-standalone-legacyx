"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _d3Fetch = require("d3-fetch");
var _utils = require("../utils");
/**
 * Asynchronously load and parse data from json file using d3-fetch.
 * Throws an error if the request for `main` fails.
 * For requests other than `main`, returns the given or default fallback response.
 * @param {String} path JSON file location. Defaults to main data url from config.js
 * @param {Object} fallback The fallback response object on request failure. Default `{}`.
 * @return {Function} A promise that will return when the file is loaded and parsed
 */
const loadJsonData = function () {
  let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _utils.getUrl)('main');
  let fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return (0, _d3Fetch.json)(path).catch(() => {
    const fullPath = "/public".concat(path.substr(1));

    // For main route throw a user error
    if (path === (0, _utils.getUrl)('main')) {
      throw new Error("Unable to load data from ".concat(path, ". If you're running Kedro-Viz as a standalone (e.g. for JavaScript development), please check that you have placed a data file at ").concat(fullPath, "."));
    }
    return new Promise(resolve => resolve(fallback));
  });
};
var _default = exports.default = loadJsonData;