"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTagNodeCounts = exports.getTagData = exports.getTagCount = void 0;
var _reselect = require("reselect");
var _pipeline = require("./pipeline");
const getNodeTags = state => state.node.tags;
const getTagName = state => state.tag.name;
const getTagActive = state => state.tag.active;
const getTagEnabled = state => state.tag.enabled;

/**
 * Retrieve the formatted list of tag filters
 */
const getTagData = exports.getTagData = (0, _reselect.createSelector)([_pipeline.getPipelineTagIDs, getTagName, getTagActive, getTagEnabled], (tagIDs, tagName, tagActive, tagEnabled) => tagIDs.sort().map(id => ({
  id,
  name: tagName[id],
  active: Boolean(tagActive[id]),
  enabled: Boolean(tagEnabled[id])
})));

/**
 * Get the total and enabled number of tags
 */
const getTagCount = exports.getTagCount = (0, _reselect.createSelector)([_pipeline.getPipelineTagIDs, getTagEnabled], (tagIDs, tagEnabled) => ({
  total: tagIDs.length,
  enabled: tagIDs.filter(id => tagEnabled[id]).length
}));

/**
 * Get the total number of nodes for each tag
 */
const getTagNodeCounts = exports.getTagNodeCounts = (0, _reselect.createSelector)([getNodeTags], nodeTags => {
  const counts = {};
  for (const tagIds of Object.values(nodeTags)) {
    for (const tagId of tagIds) {
      counts[tagId] = counts[tagId] + 1 || 1;
    }
  }
  return counts;
});