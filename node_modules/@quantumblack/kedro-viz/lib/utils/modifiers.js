"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
/**
 * Returns a className string with the given modifiers in BEM style
 * @param {String} name The main class name
 * @param {?Object} modifiers Map of modifier names to boolean or string values
 * @param {?String} others Optional class name string to concatenate after
 * @return {String} The compiled class name(s)
 */
const modifiers = function (name, modifiers) {
  let others = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  return Object.keys(modifiers || {}).reduce((classes, modifier) => {
    const value = modifiers[modifier];
    if (typeof value !== 'string' && typeof value !== 'number') {
      return "".concat(classes, " ").concat(name, "--").concat(value ? '' : 'no-').concat(modifier);
    }
    return "".concat(classes, " ").concat(name, "--").concat(modifier, "-").concat((value + '').replace(/\s/g, '-'));
  }, name) + (others ? ' ' + others : '');
};
var _default = exports.default = modifiers;