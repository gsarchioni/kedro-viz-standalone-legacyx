"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.usePrevious = exports.useOutsideClick = void 0;
var _react = require("react");
/**
 * Custom hook to obtain previous values before state changes. The value can be any data type.
 * @param {value} object
 */
const usePrevious = value => {
  const ref = (0, _react.useRef)();
  (0, _react.useEffect)(() => {
    ref.current = value;
  });
  return ref.current;
};

/**
 * Custom hook to detect clicks outside of a specified element.
 * @param {Function} callback The function to fire on an outside click.
 * @returns A React ref of the element you want to click outside of.
 */
exports.usePrevious = usePrevious;
const useOutsideClick = callback => {
  const ref = (0, _react.useRef)();
  (0, _react.useEffect)(() => {
    const handleClick = event => {
      if (ref.current && !ref.current.contains(event.target)) {
        callback();
      }
    };
    document.addEventListener('click', handleClick, true);
    return () => {
      document.removeEventListener('click', handleClick, true);
    };
  }, [callback, ref]);
  return ref;
};
exports.useOutsideClick = useOutsideClick;